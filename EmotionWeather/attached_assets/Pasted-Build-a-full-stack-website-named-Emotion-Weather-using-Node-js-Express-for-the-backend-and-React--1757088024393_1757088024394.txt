Build a full-stack website named Emotion Weather using Node.js + Express for the backend and React + TailwindCSS for the frontend, with a minimal pale white theme inspired by cord.com. The website will have four main pages: (1) Dashboard Page showing the current policy heading and detailed information, plus an auto-scrolling right-side panel listing more policies; (2) Voting Page where users can cast mood-based votes (😀 happy, 😡 angry, 😐 neutral, 💡 suggestion), view a real-time pie chart (using Recharts or Chart.js) of vote distribution, submit comments, see a section with top comments, and check both total votes and live vote counts updated through Socket.IO real-time connections; (3) Emotion Weather Map Page featuring an interactive India map (Leaflet.js or Mapbox) where colored “clouds” appear over cities or states based on user location and voting mood (red for angry, green for happy, gray for neutral, blue for suggestion), with color intensity dynamically reflecting vote density, and map data updating in real time from the backend; (4) Summary Page where an AI integration (OpenAI or HuggingFace NLP model) processes all comments and automatically classifies them into three groups — Angry Concerns, Positive Feedback, and Suggestions — then displays each category in clean card-style boxes. The backend must provide REST APIs including POST /vote, POST /comment, GET /results, GET /comments, and GET /summary, with all data stored in MongoDB or PostgreSQL. WebSocket support should broadcast new votes and comments instantly to connected clients. The frontend should use React Router for navigation, TailwindCSS for layout and responsive styling, Recharts for pie charts, Leaflet.js for the map visualization, and Socket.IO client for receiving real-time updates. The final app must deliver a polished, responsive, full-stack solution where user actions flow smoothly from input → database → backend → live frontend visualization with real-time emotional weather updates across dashboards, charts, maps, and summaries.